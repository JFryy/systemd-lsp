name: Release

on:
  schedule:
    - cron: "0 0 * * 0" # Weekly on Sunday at midnight UTC

  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    name: build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }}

      - name: Create release directory
        run: mkdir -p release

      - name: Copy binary (Unix)
        if: matrix.os != 'windows-latest'
        run: cp target/${{ matrix.target }}/release/systemd-lsp release/systemd-lsp-${{ matrix.target }}

      - name: Copy binary (Windows)
        if: matrix.os == 'windows-latest'
        run: cp target/${{ matrix.target }}/release/systemd-lsp.exe release/systemd-lsp-${{ matrix.target }}.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: systemd-lsp-${{ matrix.target }}
          path: release/*

  release:
    if: github.event_name == 'workflow_dispatch'
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release directory
        run: mkdir -p release

      - name: Organize artifacts
        run: |
          find artifacts -name "systemd-lsp-*" -type f -exec cp {} release/ \;
          ls -la release/

      - name: Generate tag name
        run: echo "RELEASE_TAG=v$(date +%Y.%m.%d)" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "Release ${{ env.RELEASE_TAG }}"
          body: |
            Automated release of systemd-lsp

            ## Changes
            - Latest updates to systemd-lsp
            
            ## Downloads
            Choose the appropriate binary for your platform:
            - Linux x86_64: `systemd-lsp-x86_64-unknown-linux-gnu`
            - macOS Intel: `systemd-lsp-x86_64-apple-darwin`
            - macOS Apple Silicon: `systemd-lsp-aarch64-apple-darwin`
            - Windows: `systemd-lsp-x86_64-pc-windows-msvc.exe`
          files: release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}